# python scripts/recon/train_learning_based.py -cn digicam_multimask
defaults:
  - defaults
  - _self_

wandb_project: digicam_multimask
eval_disp_idx: [1, 2, 4, 5, 9]

# Dataset
files:
  dataset: bezzam/DigiCam-Mirflickr-MultiMask-25K
  huggingface_dataset: True
  huggingface_psf: null
  downsample: 1
  # TODO: these parameters should be in the dataset?
  image_res: [900, 1200]  # used during measurement
  rotate: True   # if measurement is upside-down
  save_psf: True

# TODO: these parameters should be in the dataset?
alignment:
  # when there is no downsampling
  top_left: [80, 100]  # height, width
  height: 200

# simulate PSF
simulation:
  use_waveprop: True
  deadspace: True
  scene2mask: 0.3
  mask2sensor: 0.002

training:
  batch_size: 4
  epoch: 25
  eval_batch_size: 4

reconstruction:
  method: unrolled_admm
  unrolled_admm:
    n_iter: 5
    mu1: 0.0001
    mu2: 0.0001
    mu3: 0.0001
    tau: 0.0002

  # # Just post-processing (8.2M parameters)
  # post_process: 
  #   network : UnetRes  # UnetRes or DruNet or null
  #   depth : 4 # depth of each up/downsampling layer. Ignore if network is DruNet
  #   nc: [32,64,128,256]

  # # Pre-processing + post-processing (8.1M parameters)
  # pre_process: 
  #   network : UnetRes  # UnetRes or DruNet or null
  #   depth : 4 # depth of each up/downsampling layer. Ignore if network is DruNet
  #   nc: [32,64,116,128]
  # post_process: 
  #   network : UnetRes  # UnetRes or DruNet or null
  #   depth : 4 # depth of each up/downsampling layer. Ignore if network is DruNet
  #   nc: [32,64,116,128]

  # Pre-processing + post-processing + PSF correction (8.1M parameters)
  psf_network: [4,8,16,32]
  pre_process: 
    network : UnetRes  # UnetRes or DruNet or null
    depth : 4 # depth of each up/downsampling layer. Ignore if network is DruNet
    nc: [32,64,112,128]
  post_process: 
    network : UnetRes  # UnetRes or DruNet or null
    depth : 4 # depth of each up/downsampling layer. Ignore if network is DruNet
    nc: [32,64,116,128]
